/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package BOVSite;

import MapssUtils.Car;
import jIntro.unameErr;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Tolise
 */
public class CarView extends javax.swing.JFrame {
    
    private String company = "";
    private List<Car> cars;
    
    private DefaultTableModel tableModel; 
    
    private long id = 0;
    private String year = "";
    private String make = "";
    private String model = "";
    private String fuel = "";
    private String color = "";
    private String price = "";

    /**
     * Creates new form CarView
     */
    public CarView() {
        initComponents();
    }
    
    public CarView(String comp){
        setCompany(comp);
        initComponents();
    }
    
    public String getCompany(){
        return this.company;
    }
    
    public void setCompany(String val){
        this.company = val;
    }
    
    private void buildList(){
        cars = new ArrayList<Car>();
        Connection c = null;
        Statement stmt = null;
        try {
            Class.forName("org.sqlite.JDBC");
            c = DriverManager.getConnection("jdbc:sqlite:bov.db");
            c.setAutoCommit(false);
            System.out.println("Opened database successfully");
            stmt = c.createStatement();
            String comp = company;
            String q = "";
            if(comp == null){
                q = "SELECT * FROM vehicles";
            } else {
                q = "SELECT * FROM vehicles WHERE make='" + comp + "';";
            }
            System.out.println(q);
            ResultSet rs = stmt.executeQuery(q);
            while(rs.next()){
                Car car = new Car(rs.getInt("id"),
                rs.getString("year"),
                rs.getString("make"),
                rs.getString("model"),
                rs.getString("gas"),
                Car.CarColor.valueOf(rs.getString("color")),
                String.valueOf(rs.getInt("price")));
                cars.add(car);
            }
            rs.close();
            stmt.close();
            c.commit();
            c.close();
        } catch ( Exception e ) {
          System.err.println( e.getClass().getName() + ": " + e.getMessage() );
          System.exit(0);
        }
    }
    private Object[][] getData(){
        this.buildList();
        Object[][] dArray = new Object[cars.size()][7];
        for (int i = 0; i < cars.size(); i++){
            dArray[i][0] = cars.get(i).getId();
            dArray[i][1] = cars.get(i).getYear();
            dArray[i][2] = cars.get(i).getMake();
            dArray[i][3] = cars.get(i).getModel();
            dArray[i][4] = cars.get(i).getFuel();
            dArray[i][5] = cars.get(i).getColor();
            dArray[i][6] = cars.get(i).getPrice();
        }
        return dArray;
    }
    
    public static void executeSQL(String sql){
        Connection c = null;
        Statement stmt = null;
        try {
            Class.forName("org.sqlite.JDBC");
            c = DriverManager.getConnection("jdbc:sqlite:bov.db");
            c.setAutoCommit(false);
            System.out.println("Opened database successfully");
            stmt = c.createStatement();
            stmt.execute(sql);
            stmt.close();
            c.commit();
            c.close();
        } catch ( Exception e ) {
          System.err.println( e.getClass().getName() + ": " + e.getMessage() );
          System.exit(0);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        editDialog = new javax.swing.JDialog();
        jLabel3 = new javax.swing.JLabel();
        modelField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        fuelField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        makeField = new javax.swing.JTextField();
        msrpField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        colorCombo = new javax.swing.JComboBox<>();
        yearField = new javax.swing.JTextField();
        editButton = new javax.swing.JButton();
        titleLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        titleStringLabel = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        carTable = new javax.swing.JTable();
        editItemButton = new javax.swing.JButton();
        deleteItemButton = new javax.swing.JButton();

        editDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        editDialog.setModal(true);
        editDialog.setSize(new java.awt.Dimension(600, 500));

        jLabel3.setText("Make: ");

        modelField.setText(model);

        jLabel4.setText("Model: ");

        fuelField.setText(fuel);

        jLabel5.setText("Fuel Economy:");

        jLabel6.setText("Color: ");

        makeField.setText(make);

        msrpField.setText(price);

        jLabel7.setText("MSRP: ");

        colorCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "White", "Black", "Red", "Blue", "Silver" }));
        colorCombo.setSelectedItem(color);

        yearField.setText(year);

        editButton.setText("Save");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        titleLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        titleLabel.setText("Edit Car");

        jLabel2.setText("Year: ");

        javax.swing.GroupLayout editDialogLayout = new javax.swing.GroupLayout(editDialog.getContentPane());
        editDialog.getContentPane().setLayout(editDialogLayout);
        editDialogLayout.setHorizontalGroup(
            editDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(editDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(editDialogLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(editButton)
                        .addContainerGap())
                    .addGroup(editDialogLayout.createSequentialGroup()
                        .addGroup(editDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addGroup(editDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel5)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(editDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(editDialogLayout.createSequentialGroup()
                                .addComponent(colorCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 197, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editDialogLayout.createSequentialGroup()
                                .addGroup(editDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(yearField, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(makeField, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(modelField, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fuelField, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(msrpField))
                                .addContainerGap())))))
            .addGroup(editDialogLayout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        editDialogLayout.setVerticalGroup(
            editDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editDialogLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(titleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(editDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(yearField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(makeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(modelField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(fuelField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(colorCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(msrpField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(editButton)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        titleStringLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        titleStringLabel.setText("List of Vehicles for Automotive Company");
        titleStringLabel.setAlignmentX(0.5F);

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        carTable.setAutoCreateRowSorter(true);
        Object[][] rows;
        if(this.company != null){
            rows = getData();
        } else {
            rows = new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            };
        }
        tableModel = new javax.swing.table.DefaultTableModel(
            rows,
            new String [] {
                "ID", "Year", "Make", "Model", "Gas Mileage", "Color", "MSRP"
            }
        );
        carTable.setModel(new javax.swing.table.DefaultTableModel(
            rows,
            new String [] {
                "ID", "Year", "Make", "Model", "Gas Mileage", "Color", "MSRP"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        carTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(carTable);
        TableColumnModel tcm = carTable.getColumnModel();
        tcm.removeColumn(tcm.getColumn(0));

        editItemButton.setText("Edit Item");
        editItemButton.setMaximumSize(new java.awt.Dimension(99, 25));
        editItemButton.setMinimumSize(new java.awt.Dimension(99, 25));
        editItemButton.setPreferredSize(new java.awt.Dimension(99, 25));
        editItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editItemButtonActionPerformed(evt);
            }
        });

        deleteItemButton.setText("Delete Item");
        deleteItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteItemButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 411, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(editItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(backButton, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(deleteItemButton, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addComponent(titleStringLabel))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleStringLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(editItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteItemButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 232, Short.MAX_VALUE)
                        .addComponent(backButton))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        new VehicleForm().setVisible(true);
        this.dispose();// TODO add your handling code here:
    }//GEN-LAST:event_backButtonActionPerformed

    private void editItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editItemButtonActionPerformed
        int row;
        long selectedId;
        Car selectedCar = null;
        row = carTable.getSelectedRow();
        selectedId = (long) carTable.getModel().getValueAt(row, 0);
        for(Car c : cars){
            if(c.getId() == selectedId){
                selectedCar = c;
                break;
            }
        }
        if(selectedCar != null){
            id = selectedCar.getId();
            year = selectedCar.getYear();
            make = selectedCar.getMake();
            model = selectedCar.getModel();
            fuel = selectedCar.getFuel();
            color = String.valueOf(selectedCar.getColor());
            price = selectedCar.getPrice();
            
            yearField.setText(year);
            modelField.setText(model);
            fuelField.setText(fuel);
            makeField.setText(make);
            msrpField.setText(price);
            colorCombo.setSelectedItem(color);
            
            editDialog.setVisible(true);
        }
    }//GEN-LAST:event_editItemButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        
        year = yearField.getText();
        try{
            Integer.parseInt(year);
        } catch (NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Invalid year!");
            return;
        }
        make = makeField.getText();
        model = modelField.getText();
        fuel = fuelField.getText();
        try{
            Integer.parseInt(fuel);
        } catch (NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Invalid Fuel Economy!");
            return;
        }
        color = String.valueOf(colorCombo.getSelectedItem());
        price = msrpField.getText();
        try{
            Integer.parseInt(fuel);
        } catch (NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Invalid MSRP!");
            return;
        }
        Car newCar = new Car(id, year, make, model, fuel,
            Car.CarColor.valueOf(color), price);
        System.out.println(newCar.ins_or_update_stmt());
        executeSQL(newCar.ins_or_update_stmt());
        reload();
        tableModel.fireTableDataChanged();
        editDialog.setVisible(false);
    }//GEN-LAST:event_editButtonActionPerformed

    private void deleteItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteItemButtonActionPerformed
       if(JOptionPane.showConfirmDialog(this, "Are you sure?", "Confirm Delete",
               JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION){
            int row = carTable.getSelectedRow();
            long selectedId = (long) carTable.getModel().getValueAt(row, 0);
            Car selectedCar = null;
            for(Car c : cars){
                if(c.getId() == selectedId){
                    selectedCar = c;
                    break;
                }
            }
            if(selectedCar != null){
                executeSQL(selectedCar.del_stmt());
                reload();
                tableModel.fireTableDataChanged();
            }
       }
    }//GEN-LAST:event_deleteItemButtonActionPerformed

    private void reload(){
        tableModel = new DefaultTableModel(getData(), 
            new String [] {
                "ID", "Year", "Make", "Model", "Gas Mileage", "Color", "MSRP"
            }
        );
        carTable.setModel(tableModel);
        TableColumnModel tcm = carTable.getColumnModel();
        tcm.removeColumn(tcm.getColumn(0));
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CarView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CarView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CarView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CarView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CarView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JTable carTable;
    private javax.swing.JComboBox<String> colorCombo;
    private javax.swing.JButton deleteItemButton;
    private javax.swing.JButton editButton;
    private javax.swing.JDialog editDialog;
    private javax.swing.JButton editItemButton;
    private javax.swing.JTextField fuelField;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField makeField;
    private javax.swing.JTextField modelField;
    private javax.swing.JTextField msrpField;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JLabel titleStringLabel;
    private javax.swing.JTextField yearField;
    // End of variables declaration//GEN-END:variables
}
